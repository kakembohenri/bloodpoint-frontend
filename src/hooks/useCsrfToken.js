import { useState, useEffect } from "react";
import axios from "axios";

export default function useCsrfToken() {
  const [csrfToken, setCsrfToken] = useState(null);

  useEffect(() => {
    // Get CSRF token from Laravel before rendering form
    axios.get("http://127.0.0.1:8000/api/csrf-cookie", {
        withCredentials: true
    })
      .then(response => {
        setCsrfToken(response.data.token);
      })
      .catch(error => {
        console.log(error);
      });
  }, []);

  return csrfToken;
}

// *Corresponding Form.js
// import React from "react";
// import Head from "next/head";
// import Link from "next/link";
// import { useRouter } from "next/router";
// import axios from "axios";
// import useCsrfToken from "../hooks/useCsrfToken";// Import custom hook

// export default function Form() {
//   const router = useRouter();
//   const csrfToken = useCsrfToken(); // Use custom hook

//   const handleSubmit = (event) => {
//     event.preventDefault();

//     let name = "Cliff";
//     let email = "ezra@gmail.com";


//     axios.post("http://127.0.0.1:8000/api/form", {
//       name,
//       email
//     }, {
//         headers: {
//             // Send only one header for CSRF token
//             'X-CSRF-TOKEN': csrfToken
//           }
//     })
//     .then(response => {
//       // handle success
//       console.log(response.data);
//       router.push("/success");
//     })
//     .catch(error => {
//       // handle error
//       console.log(error);
//     //   router.push("/error");
//     });
//   };

//   return (
//     <div>
//       <Head>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//         <title>Form Example</title>
//         <link rel="icon" href="/favicon.ico" />

//       </Head>

//       <main>
//         <h1>Form Example</h1>
//         {csrfToken && ( // Render form only if CSRF token is available
//           <form onSubmit={handleSubmit}>

//             {/* Use hidden input field for CSRF token */}
//             <input type="hidden" name="_token" value={csrfToken} />

//             <div>
//               <label htmlFor="name">Name:</label>
//               <input id="name" name="name" type="text" placeholder="Enter your name" required />
//             </div>
//             <div>
//               <label htmlFor="email">Email:</label>
//               <input id="email" name="email" type="email" placeholder="Enter your email" required />
//             </div>
//             <button type="submit">Submit</button>
//           </form>
//         )}

//         <Link href="/">
//           <a>Go back home</a>
//         </Link>
//       </main>

//     </div>
//   );
// }

// *Ensure the following is in your header
// <meta name="csrf-token" content="{{ csrf_token() }}" />
